name: Release

on:
  push:
    branches:
      - master
      - development

jobs:
  release:
    name: 'Release NPM, GitHub'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.15
      - name: Install dependencies
        run: npm ci
      - name: Get version from package.json before release step
        id: initversion
        run: echo "version=$(npm run get-version --silent)" >> $GITHUB_OUTPUT
      - name: Release to NPM and GitHub
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_NAME: flowbuild-bot
          GIT_AUTHOR_EMAIL: flowbuild.bot@gmail.com
          GIT_COMMITTER_NAME: flowbuild-bot
          GIT_COMMITTER_EMAIL: flowbuild.bot@gmail.com
        run: npm run release
      - name: Get version from package.json after release step
        id: extractver
        run: echo "version=$(npm run get-version --silent)" >> $GITHUB_OUTPUT
      - name: Create Pull Request with updated package files
        if: steps.initversion.outputs.version != steps.extractver.outputs.version
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          commit-message: 'chore(release): ${{ steps.extractver.outputs.version }}'
          committer: flowbuild-bot <flowbuild.bot@gmail.com>
          author: flowbuild-bot <flowbuild.bot@gmail.com>
          title: 'chore(release): ${{ steps.extractver.outputs.version }}'
          body: 'Version bump in package.json and package-lock.json for release [${{ steps.extractver.outputs.version }}](https://github.com/${{github.repository}}/releases/tag/v${{ steps.extractver.outputs.version }})'
          branch: version-bump/${{ steps.extractver.outputs.version }}
    outputs:
      version: ${{ steps.extractver.outputs.version }}
  build:
    name: 'Build image on DockerHub'
    needs:
      - release
    runs-on: ubuntu-latest
    steps:
      - name: Print Version
        run: echo "Using version ${{ needs.release.outputs.version }}"
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push latest
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: flowbuild/server:latest
      - name: Build and push version
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: 'flowbuild/server:${{ needs.release.outputs.version }}'