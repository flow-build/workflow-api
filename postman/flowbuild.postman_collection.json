{
	"info": {
		"_postman_id": "5cb4c4b9-cffa-4a01-96cb-5b1aec5bf428",
		"name": "FlowBuild",
		"description": "Default API routes to access FlowBuild engine.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Workflows",
			"item": [
				{
					"name": "Create Workflow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.collectionVariables.set(\"workflow_id\",response.workflow_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "content",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"ATV_INCOME_RESUME_SALESFORCE\",\r\n  \"description\": \"Integration wirh Salesforce\",\r\n  \"blueprint_spec\": {\r\n    \"lanes\": [\r\n      {\r\n        \"id\": \"creatorOnly\",\r\n        \"name\": \"creatorOnly\",\r\n        \"rule\": [\r\n          \"fn\",\r\n          [\r\n            \"actor_data\",\r\n            \"bag\"\r\n          ],\r\n          [\r\n            \"=\",\r\n            [\r\n              \"get\",\r\n              \"bag\",\r\n              [\r\n                \"`\",\r\n                \"creatorId\"\r\n              ]\r\n            ],\r\n            [\r\n              \"get\",\r\n              \"actor_data\",\r\n              [\r\n                \"`\",\r\n                \"actor_id\"\r\n              ]\r\n            ]\r\n          ]\r\n        ]\r\n      },\r\n      {\r\n        \"id\": \"anyone\",\r\n        \"name\": \"public\",\r\n        \"rule\": [\r\n          \"fn\",\r\n          [\r\n            \"&\",\r\n            \"args\"\r\n          ],\r\n          true\r\n        ]\r\n      }\r\n    ],\r\n    \"nodes\": [\r\n      {\r\n        \"id\": \"0\",\r\n        \"name\": \"Start INCOME_RESUME\",\r\n        \"next\": \"CREATOR\",\r\n        \"type\": \"Start\",\r\n        \"lane_id\": \"anyone\",\r\n        \"parameters\": {\r\n          \"input_schema\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n              \"creatorId\": {\r\n                \"type\": \"string\"\r\n              },\r\n              \"cpf\": {\r\n                \"type\": \"string\"\r\n              },\r\n              \"name\": {\r\n                \"type\": \"string\"\r\n              },\r\n              \"approval_id\": {\r\n                \"type\": \"integer\"\r\n              }\r\n            }\r\n          },\r\n          \"timeout\": 604800\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"CONFIG\",\r\n        \"name\": \"bag dic config\",\r\n        \"next\": \"CREATOR\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"anyone\",\r\n        \"category\": \"setToBag\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"dicPending\": {\r\n              \"fix_personal_infos\": {\r\n                \"type\": \"fix_personal_infos\",\r\n                \"title\": \"Precisamos que você verifique seus dados!\",\r\n                \"subtitle\": \"Revise as informações enviadas para seguirmos com seu pedido. Vamos lá?\",\r\n                \"button\": \"verificar dados\"\r\n              },\r\n              \"fix_address\": {\r\n                \"type\": \"fix_address\",\r\n                \"title\": \"Precisamos que você verifique seu endereço!\",\r\n                \"subtitle\": \"Revise as informações enviadas para seguirmos com seu pedido. Vamos lá?\",\r\n                \"button\": \"verificar endereço\"\r\n              },\r\n              \"fix_mobile_confirmation\": {\r\n                \"type\": \"fix_mobile_confirmation\",\r\n                \"title\": \"Precisamos que você valide seu celular!\",\r\n                \"subtitle\": \"Valide seu número de celular para seguirmos com seu pedido. Vamos lá?\",\r\n                \"button\": \"validar celular\"\r\n              },\r\n              \"fix_upload_id_document\": {\r\n                \"type\": \"fix_upload_id_document\",\r\n                \"title\": \"Precisamos que você verifique seu documento!\",\r\n                \"subtitle\": \"Revise as informações enviadas para seguirmos com seu pedido. Vamos lá?\",\r\n                \"button\": \"verificar documento\"\r\n              },\r\n              \"fix_upload_selfie\": {\r\n                \"type\": \"fix_upload_selfie\",\r\n                \"title\": \"Precisamos que você envie seu selfie!\",\r\n                \"subtitle\": \"Envie sua selfie para seguirmos com seu pedido. Vamos lá?\",\r\n                \"button\": \"enviar selfie\"\r\n              },\r\n              \"fix_principal_income\": {\r\n                \"type\": \"fix_principal_income\",\r\n                \"title\": \"Precisamos que você verifique sua renda!\",\r\n                \"subtitle\": \"Revise as informações enviadas para seguirmos com seu pedido. Vamos lá?\",\r\n                \"button\": \"verificar renda\"\r\n              }\r\n            },\r\n            \"dicMensagemErro\": {\r\n              \"default\": \"Tivemos um problema no site. Reenvie seus comprovantes de renda.\",\r\n              \"EMAIL_LOCKED\": \"No momento um novo reenvio de email está bloqueado. Confira sua caixa de entrada.\",\r\n              \"INVALID_PARAM\": \"Algum dado informado está incorreto, se o erro persistir, entre em contato\",\r\n              \"INVALID_TOKEN\": \"Caso não consiga prosseguir, gere um novo código\",\r\n              \"PARAM_MISSING\": \"Falta preencher alguma informação\",\r\n              \"INVALID_INCOME\": \"Não foi possível salvar algumas informações nessa etapa, tente voltar um passo, talvez recarregar a página\",\r\n              \"INVALID_PROFILE\": \"Perfil inválido, se o erro persistir, encerre a sessão e entre novamente\",\r\n              \"INVALID_APPROVAL\": \"Volte para o passo de seleção de valores\",\r\n              \"APPROVAL_NOT_FOUND\": \"Proposta não encontrada, tente novamente\",\r\n              \"INVALID_CREDENTIALS\": \"Credenciais de acesso inválidas, caso não se lembre de sua senha, basta solicitar a redefinição\",\r\n              \"INVALID_PARAM_VALUE\": \"O valor de um dos parâmetros enviados é inválido, entre em contato\",\r\n              \"MAX_INCOMES_REACHED\": \"Número máximo de rendas extra atingido\",\r\n              \"PROFILE_NOT_APPROVED\": \"Este perfil ainda não foi aprovado\",\r\n              \"INVALID_PROFILE_STATUS\": \"Você não devia estar nessa tela\",\r\n              \"APPROVAL_PROFILE_NOT_FOUND\": \"Perfil de proposta não encontrado, tente novamente\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"CREATOR\",\r\n        \"name\": \"creator provided?\",\r\n        \"next\": { \r\n          \"default\": \"CREATOR-BAG\"\r\n        },\r\n        \"type\": \"Flow\",\r\n        \"lane_id\": \"anyone\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"decision\": {\r\n              \"$ref\": \"bag.creatorId\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"CREATOR-BAG\",\r\n        \"name\": \"bag creatorId from actor_data\",\r\n        \"next\": \"PROFILE\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"anyone\",\r\n        \"category\": \"setToBag\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"creatorId\": {\r\n              \"$ref\": \"actor_data.actor_id\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"PROFILE\",\r\n        \"name\": \"get user profile\",\r\n        \"next\": \"PROFILE-BAG\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"anyone\",\r\n        \"category\": \"http\",\r\n        \"parameters\": {\r\n          \"input\": {},\r\n          \"request\": {\r\n            \"url\": {\r\n              \"$mustache\": \"https://user-profile.{{{environment.BASE_URL}}}/api/profiles/{{bag.creatorId}}\"\r\n            },\r\n            \"verb\": \"GET\",\r\n            \"headers\": {\r\n              \"ContentType\": \"application/json\",\r\n              \"Authorization\": {\r\n                \"$mustache\": \"LendicoLogin apikey={{{environment.USER_PROFILE_API_KEY}}}\"\r\n              }\r\n            }\r\n          },\r\n          \"valid_response_codes\": [\r\n            200,\r\n            204\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"PROFILE-BAG\",\r\n        \"name\": \"bag profile incomes\",\r\n        \"next\": \"PROFILE-CHECK\",\r\n        \"type\": \"systemTask\",\r\n        \"category\": \"setToBag\",\r\n        \"lane_id\": \"anyone\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"incomes\": {\r\n              \"$ref\": \"result.data.incomes\"\r\n            },\r\n            \"error_message\": \"\"\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"PROFILE-CHECK\",\r\n        \"name\": \"check profile\",\r\n        \"next\": \"CHECK\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"anyone\",\r\n        \"category\": \"setToBag\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"validation\": {\r\n              \"$js\": \"({ bag }) => {\\n                let allowedStatus = [\\\"OPEN\\\", \\\"REOPEN\\\", \\\"REPROVED\\\"];\\n                if (allowedStatus.includes(bag.profile.status)) {\\n                  return true;\\n                } else {\\n                  return false;\\n                }\\n              }\"\r\n            },\r\n            \"pending\": {\r\n              \"$js\": \"({ bag }) => {\\n                let response = [];\\n                let profile = bag.profile;\\n                if (!profile.sex || !profile.birth_dt || !profile.name || !profile.occupation) {\\n                  response.push('fix_personal_infos');\\n                }\\n                if (!profile.address || Object.keys(profile.address).length <= 8) {\\n                  response.push('fix_address');\\n                }\\n                if (!profile.mobile_number || !profile.mobile_confirmed) {\\n                  response.push('fix_mobile_confirmation');\\n                }\\n                if (!profile.rg && !profile.cnh && !profile.rne) {\\n                  response.push('fix_identification_infos')\\n                }\\n                if (profile.documents.filter((item) => item.name === \\\"rg_cnh\\\").length < 2) {\\n                  response.push('fix_upload_id_document');\\n                }\\n                if (profile.documents.filter((item) => item.name === \\\"selfie\\\").length < 1) {\\n                  response.push('fix_upload_selfie');\\n                }\\n                if (!profile.incomes || profile.incomes.length < 1) {\\n                  response.push('fix_principal_income');\\n                }\\n                return response;\\n              }\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"CHECK\",\r\n        \"name\": \"validation errors?\",\r\n        \"next\": {\r\n          \"false\": \"ALERT_USER\",\r\n          \"default\": \"RESUME\"\r\n        },\r\n        \"type\": \"Flow\",\r\n        \"lane_id\": \"anyone\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"decision\": {\r\n              \"$ref\": \"bag.validation\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"RESUME\",\r\n        \"name\": \"INCOME_RESUME\",\r\n        \"next\": \"RESUME-ACTION\",\r\n        \"type\": \"UserTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"flow\": {\r\n              \"$ref\": \"bag.flow\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"actions\": {\r\n              \"send_files\": \"enviar comprovantes\",\r\n              \"edit_payslip\": \"editar holerite\",\r\n              \"delete_income\": \"deletar renda\",\r\n              \"add_new_income\": \"adicionar renda\",\r\n              \"edit_bank_statement\": \"editar extrato bancário\",\r\n              \"edit_benefit_extract\": \"editar comprovante do benefício\"\r\n            },\r\n            \"pending\": {\r\n              \"$ref\": \"bag.dicPending[pending[0]]\"\r\n            },\r\n            \"incomes\": {\r\n              \"$ref\": \"bag.incomes\"\r\n            },\r\n            \"current_user\": {\r\n              \"$ref\": \"bag.creatorId\"\r\n            },\r\n            \"error_message\": {\r\n              \"$ref\": \"bag.error_message\"\r\n            }\r\n          },\r\n          \"action\": \"INCOME_RESUME\",\r\n          \"activity_manager\": \"commit\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"RESUME-ACTION\",\r\n        \"name\": \"action?\",\r\n        \"next\": {\r\n          \"default\": \"RESUME\",\r\n          \"deletar renda\": \"REMOVE_INCOME\",\r\n          \"enviar selfie\": \"SELFIE\",\r\n          \"corrigir renda\": \"PRINCIPAL\",\r\n          \"adicionar renda\": \"EXTRA\",\r\n          \"editar holerite\": \"PAYSLIP\",\r\n          \"validar celular\": \"MOBILE\",\r\n          \"corrigir endereço\": \"ADDRESS\",\r\n          \"enviar comprovantes\": \"ANALYSE\",\r\n          \"corrigir dados pessoais\": \"PERSONAL\",\r\n          \"editar extrato bancário\": \"STATEMENT\",\r\n          \"editar comprovante do benefício\": \"BENEFIT\",\r\n          \"enviar documento de identificação\": \"ID_DOC\",\r\n          \"corrigir documento de identificação\": \"ID_INFOS\"\r\n        },\r\n        \"type\": \"Flow\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"decision\": {\r\n              \"$ref\": \"result.activities[0].data.action\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"ANALYSE\",\r\n        \"name\": \"Http node\",\r\n        \"next\": \"ANALYSE-STATUS\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"http\",\r\n        \"parameters\": {\r\n          \"input\": {},\r\n          \"request\": {\r\n            \"url\": {\r\n              \"$mustache\": \"https://api.{{{environment.BASE_URL}}}/user/profile/send_to_analysis?ignore_in_analysis=true\"\r\n            },\r\n            \"verb\": \"POST\",\r\n            \"headers\": {\r\n              \"Authorization\": {\r\n                \"$mustache\": \"UserLogin apikey=\\\"{{{actor_data.lendico_token}}}\\\"\"\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"ANALYSE-STATUS\",\r\n        \"name\": \"send to analysis status\",\r\n        \"next\": {\r\n          \"202\": \"CREDIT_ANALYSIS\",\r\n          \"204\": \"CREDIT_ANALYSIS\",\r\n          \"default\": \"MESSAGE-BAG\"\r\n        },\r\n        \"type\": \"Flow\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"decision\": {\r\n              \"$ref\": \"result.status\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"MESSAGE-BAG\",\r\n        \"name\": \"bag error message\",\r\n        \"next\": \"RESUME\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"setToBag\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"error_message\": {\r\n              \"$js\": \"({ bag, result }) => {\\n                return bag.dicMensagemErro[result.data.error.code] || bag.dicMensagemErro[\\\"default\\\"];\\n              }\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"CREDIT_ANALYSIS\",\r\n        \"name\": \"Start CREDIT_ANALYSIS\",\r\n        \"next\": \"SALESFORCE\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"flow\": {\r\n              \"$ref\": \"bag.flow\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"approval_id\": {\r\n              \"$ref\": \"bag.approval_id\"\r\n            },\r\n            \"origin\": \"INCOME_RESUME\"\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"ATV_CREDIT_ANALYSIS_SN\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"EXTRA\",\r\n        \"name\": \"Start EXTRA_INCOME\",\r\n        \"next\": \"END-EXTRA\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"flow\": {\r\n              \"$ref\": \"bag.flow\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"approval_id\": {\r\n              \"$ref\": \"bag.approval_id\"\r\n            },\r\n            \"origin\": \"INCOME_RESUME\"\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"ATV_EXTRA_INCOME_SN\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"STATEMENT\",\r\n        \"name\": \"Start UPLOAD_BANK_STATEMENT\",\r\n        \"next\": \"END-STATEMENT\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"flow\": {\r\n              \"$ref\": \"bag.flow\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"income_id\": {\r\n              \"$ref\": \"result.activities[0].data.data.income_id\"\r\n            },\r\n            \"approval_id\": {\r\n              \"$ref\": \"bag.approval_id\"\r\n            },\r\n            \"origin\": \"INCOME_RESUME\"\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"ATV_UPLOAD_BANK_STATEMENT_SN\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"PAYSLIP\",\r\n        \"name\": \"Start UPLOAD_PAYSLIP\",\r\n        \"next\": \"END-PAYSLIP\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"flow\": {\r\n              \"$ref\": \"bag.flow\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"income_id\": {\r\n              \"$ref\": \"result.activities[0].data.data.income_id\"\r\n            },\r\n            \"approval_id\": {\r\n              \"$ref\": \"bag.approval_id\"\r\n            },\r\n            \"origin\": \"INCOME_RESUME\"\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"ATV_UPLOAD_PAYSLIP_SN\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"BENEFIT\",\r\n        \"name\": \"Start UPLOAD BENEFIT EXTRACT\",\r\n        \"next\": \"END-BENEFIT\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"flow\": {\r\n              \"$ref\": \"bag.flow\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"income_id\": {\r\n              \"$ref\": \"result.activities[0].data.data.income_id\"\r\n            },\r\n            \"approval_id\": {\r\n              \"$ref\": \"bag.approval_id\"\r\n            },\r\n            \"origin\": \"INCOME_RESUME\"\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"ATV_UPLOAD_BENEFIT_EXTRACT_SN\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"PERSONAL\",\r\n        \"name\": \"Start PERSONAL_INFOS\",\r\n        \"next\": \"END-PERSONAL\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"flow\": {\r\n              \"$ref\": \"bag.flow\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"approval_id\": {\r\n              \"$ref\": \"bag.approval_id\"\r\n            },\r\n            \"origin\": \"INCOME_RESUME\"\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"ATV_PERSONAL_INFOS_SN\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"ADDRESS\",\r\n        \"name\": \"Start ADDRESS\",\r\n        \"next\": \"END-ADDRESS\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"flow\": {\r\n              \"$ref\": \"bag.flow\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"approval_id\": {\r\n              \"$ref\": \"bag.approval_id\"\r\n            },\r\n            \"origin\": \"INCOME_RESUME\"\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"ATV_ADDRESS_SN\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"MOBILE\",\r\n        \"name\": \"Start MOBILE_CONFIRMATION\",\r\n        \"next\": \"END-MOBILE\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"flow\": {\r\n              \"$ref\": \"bag.flow\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"approval_id\": {\r\n              \"$ref\": \"bag.approval_id\"\r\n            },\r\n            \"origin\": \"INCOME_RESUME\"\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"ATV_MOBILE_CONFIRMATION_SN\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"ID_INFOS\",\r\n        \"name\": \"Start IDENTIFICATION_INFOS\",\r\n        \"next\": \"END-ID_INFOS\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"flow\": {\r\n              \"$ref\": \"bag.flow\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"approval_id\": {\r\n              \"$ref\": \"bag.approval_id\"\r\n            },\r\n            \"origin\": \"INCOME_RESUME\"\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"ATV_IDENTIFICATION_INFOS_SN\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"ID_DOC\",\r\n        \"name\": \"Start UPLOAD_ID_DOCUMENT\",\r\n        \"next\": \"END-ID_DOC\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"flow\": {\r\n              \"$ref\": \"bag.flow\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"approval_id\": {\r\n              \"$ref\": \"bag.approval_id\"\r\n            },\r\n            \"origin\": \"INCOME_RESUME\"\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"ATV_UPLOAD_ID_DOCUMENT_SN\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"SELFIE\",\r\n        \"name\": \"Start UPLOAD_SELFIE\",\r\n        \"next\": \"END-SELFIE\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"flow\": {\r\n              \"$ref\": \"bag.flow\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"approval_id\": {\r\n              \"$ref\": \"bag.approval_id\"\r\n            },\r\n            \"origin\": \"INCOME_RESUME\"\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"ATV_UPLOAD_SELFIE_SN\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"PRINCIPAL\",\r\n        \"name\": \"Start PRINCIPAL_INCOME\",\r\n        \"next\": \"END-PRINCIPAL\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"flow\": {\r\n              \"$ref\": \"bag.flow\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"approval_id\": {\r\n              \"$ref\": \"bag.approval_id\"\r\n            },\r\n            \"origin\": \"INCOME_RESUME\"\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"ATV_PRINCIPAL_INCOME_SN\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"END-ANALYSIS\",\r\n        \"name\": \"forward to CREDIT ANALYSIS\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"creatorOnly\"\r\n      },\r\n      {\r\n        \"id\": \"END-EXTRA\",\r\n        \"name\": \"back to EXTRA_INCOME\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"creatorOnly\"\r\n      },\r\n      {\r\n        \"id\": \"END-PRINCIPAL\",\r\n        \"name\": \"back to PRINCIPAL_INCOME\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"creatorOnly\"\r\n      },\r\n      {\r\n        \"id\": \"END-STATEMENT\",\r\n        \"name\": \"back to BANK STATEMENT\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"creatorOnly\"\r\n      },\r\n      {\r\n        \"id\": \"END-PAYSLIP\",\r\n        \"name\": \"back to UPLOAD PAYSLIP\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"creatorOnly\"\r\n      },\r\n      {\r\n        \"id\": \"END-BENEFIT\",\r\n        \"name\": \"back to BENEFIT\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"creatorOnly\"\r\n      },\r\n      {\r\n        \"id\": \"END-PERSONAL\",\r\n        \"name\": \"back to PERSONAL INFOS\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"creatorOnly\"\r\n      },\r\n      {\r\n        \"id\": \"END-ADDRESS\",\r\n        \"name\": \"back to ADDRESS\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"creatorOnly\"\r\n      },\r\n      {\r\n        \"id\": \"END-MOBILE\",\r\n        \"name\": \"back to MOBILE CONFIRMATION\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"creatorOnly\"\r\n      },\r\n      {\r\n        \"id\": \"END-ID_INFOS\",\r\n        \"name\": \"Back to IDENTIFICATION_INFOS\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"creatorOnly\"\r\n      },\r\n      {\r\n        \"id\": \"END-ID_DOC\",\r\n        \"name\": \"back to UPLOAD ID DOCUMENT\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"creatorOnly\"\r\n      },\r\n      {\r\n        \"id\": \"END-SELFIE\",\r\n        \"name\": \"back to UPLOAD SELFIE\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"creatorOnly\"\r\n      },\r\n      {\r\n        \"id\": \"END-PANIC\",\r\n        \"name\": \"unexpected status\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"creatorOnly\"\r\n      },\r\n      {\r\n        \"id\": \"REMOVE_INCOME\",\r\n        \"name\": \"delete income\",\r\n        \"next\": \"PROFILE\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"http\",\r\n        \"parameters\": {\r\n          \"input\": {},\r\n          \"request\": {\r\n            \"url\": {\r\n              \"$mustache\": \"https://api.{{{environment.BASE_URL}}}/user/profile/incomes/{{result.activities.0.data.data.income_id}}\"\r\n            },\r\n            \"verb\": \"DELETE\",\r\n            \"headers\": {\r\n              \"Authorization\": {\r\n                \"$mustache\": \"UserLogin apikey=\\\"{{{actor_data.lendico_token}}}\\\"\"\r\n              }\r\n            }\r\n          },\r\n          \"valid_response_codes\": [\r\n            200,\r\n            204\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"SALESFORCE\",\r\n        \"name\": \"start UPDATE SALESFORCE\",\r\n        \"next\": \"END-ANALYSIS\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"approval_id\": {\r\n              \"$ref\": \"bag.approval_id\"\r\n            },\r\n            \"creatorId\": {\r\n              \"$ref\": \"bag.creatorId\"\r\n            },\r\n            \"origin\": \"INCOME_RESUME\",\r\n            \"event\": {\r\n              \"description\": \"Atualização de Renda Principal\"\r\n            }\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"UPDATE_SALESFORCE\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"ALERT_USER\",\r\n        \"name\": \"ALERT_USER\",\r\n        \"next\": \"CHECK-PANIC\",\r\n        \"type\": \"UserTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"message\": \"Ops, tivemos um problema no status do seu perfil.\",\r\n            \"variant\": \"danger\",\r\n            \"current_user\": {\r\n              \"$ref\": \"bag.creatorId\"\r\n            }\r\n          },\r\n          \"action\": \"ALERT_USER\",\r\n          \"timeout\": 10,\r\n          \"activity_manager\": \"commit\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"CHECK-PANIC\",\r\n        \"name\": \"sent alert to NewRelic and redirect user\",\r\n        \"next\": \"END-PANIC\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"creatorOnly\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"creatorId\": {\r\n              \"$ref\": \"bag.creatorId\"\r\n            },\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"approval_id\": {\r\n              \"$ref\": \"bag.approval_id\"\r\n            },\r\n            \"origin\": \"INCOME_RESUME\",\r\n            \"description\": \"unexpected profile status\",\r\n            \"redirect\": true\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"PANIC\"\r\n        }\r\n      }\r\n    ],\r\n    \"prepare\": [],\r\n    \"environment\": {\r\n      \"BASE_URL\": \"BASE_URL\",\r\n      \"USER_PROFILE_API_KEY\": \"USER_PROFILE_API_KEY\",\r\n      \"PARTNERS_URL\": \"PARTNERS_URL\"\r\n    },\r\n    \"requirements\": [\r\n      \"core\"\r\n    ]\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{host}}/workflows",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflows"
							]
						},
						"description": "This endpoint allows you to create ou update a workflow.\n\n#### Body Request\n\nThe body must be a valid JSON with 3 key atributes:\n+ name: it determines if it will create a new worklfow or update an existing one. The name is case-sensitive and we recommend not o use symbols ou spaces.\n+ description: a friendly description for the workflow.\n+ blueprint_spec: a JSON object with instructions for execution.\n\n##### Blueprint Spec\n\n| field | type | description |\n| --- | --- | --- |\n| lanes | arrayOf(Objects) |  |\n| nodes | arrayOf(Objects) |  |\n| prepare | arrayOf(string) |  |\n| environment | Object |  |\n| requirements | arrayOf(string) |  |"
					},
					"response": []
				},
				{
					"name": "List Workflows",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/workflows",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflows"
							]
						},
						"description": "This endpoint allows you to get a list of the latest version of each workflow the user is allowed to start.\n\nIf no workflow is registered or the user is not allowed to access any workflow, it will return an empty list."
					},
					"response": [
						{
							"name": "401",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/workflows",
									"host": [
										"{{host}}"
									],
									"path": [
										"workflows"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.19.1"
								},
								{
									"key": "Date",
									"value": "Sun, 18 Oct 2020 12:49:47 GMT"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "12"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								}
							],
							"cookie": [],
							"body": "Unauthorized"
						},
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/workflows",
									"host": [
										"{{host}}"
									],
									"path": [
										"workflows"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.19.1"
								},
								{
									"key": "Date",
									"value": "Sun, 18 Oct 2020 12:52:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"uuid\",\n        \"name\": \"string\",\n        \"description\": \"string\",\n        \"blueprint_spec\": {\n            \"lanes\": [\n                {}\n            ],\n            \"nodes\": [\n                {}\n            ],\n            \"prepare\": [],\n            \"environment\": {},\n            \"requirements\": []\n        },\n        \"version\": \"integer\",\n        \"created_at\": \"date-time\"\n    }\n]"
						}
					]
				},
				{
					"name": "Read Workflow",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/workflows/:workflow_id",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflows",
								":workflow_id"
							],
							"variable": [
								{
									"key": "workflow_id",
									"value": "{{workflow_id}}",
									"type": "string"
								}
							]
						},
						"description": "This endpoint allows you to get the workflow information by its id."
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/workflows/:workflow_id",
									"host": [
										"{{host}}"
									],
									"path": [
										"workflows",
										":workflow_id"
									],
									"variable": [
										{
											"key": "workflow_id",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.19.1"
								},
								{
									"key": "Date",
									"value": "Sun, 18 Oct 2020 12:56:15 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"uuid\",\n    \"created_at\": \"date-time\",\n    \"name\": \"string\",\n    \"description\": \"string\",\n    \"blueprint_spec\": {\n        \"lanes\": [{}],\n        \"nodes\": [{}],\n        \"prepare\": [],\n        \"environment\": {},\n        \"requirements\": []\n    }\n}"
						}
					]
				},
				{
					"name": "Read Workflow By Name",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/workflows/name/:workflow_name",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflows",
								"name",
								":workflow_name"
							],
							"variable": [
								{
									"key": "workflow_name",
									"value": "{{workflow_name}}",
									"type": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Workflow",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/workflows/:workflow_id",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflows",
								":workflow_id"
							],
							"variable": [
								{
									"key": "workflow_id",
									"value": "{{workflow_id}}",
									"type": "string"
								}
							]
						},
						"description": "Use this endpoint to remove the workflow.\n\nThe workflow can only be removed if no process have been created for this workflow."
					},
					"response": []
				},
				{
					"name": "Convert Blueprint do Diagram",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"ATV_ADDRESS\",\r\n  \"description\": \"ATV_ADDRESS\",\r\n  \"blueprint_spec\": {\r\n    \"lanes\": [\r\n      {\r\n        \"id\": \"1\",\r\n        \"name\": \"creatorOnly\",\r\n        \"rule\": [\r\n          \"fn\",\r\n          [\r\n            \"actor_data\",\r\n            \"bag\"\r\n          ],\r\n          [\r\n            \"=\",\r\n            [\r\n              \"get\",\r\n              \"bag\",\r\n              [\r\n                \"`\",\r\n                \"creatorId\"\r\n              ]\r\n            ],\r\n            [\r\n              \"get\",\r\n              \"actor_data\",\r\n              [\r\n                \"`\",\r\n                \"actor_id\"\r\n              ]\r\n            ]\r\n          ]\r\n        ]\r\n      },\r\n      {\r\n        \"id\": \"99\",\r\n        \"name\": \"public\",\r\n        \"rule\": [\r\n          \"fn\",\r\n          [\r\n            \"&\",\r\n            \"args\"\r\n          ],\r\n          true\r\n        ]\r\n      }\r\n    ],\r\n    \"nodes\": [\r\n      {\r\n        \"id\": \"1\",\r\n        \"name\": \"Start node\",\r\n        \"next\": \"2\",\r\n        \"type\": \"Start\",\r\n        \"lane_id\": \"99\",\r\n        \"parameters\": {\r\n          \"input_schema\": {}\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"2\",\r\n        \"name\": \"Set to bag node\",\r\n        \"next\": \"7\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"99\",\r\n        \"category\": \"setToBag\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"creatorId\": {\r\n              \"$ref\": \"actor_data.actor_id\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"3\",\r\n        \"name\": \"Http node\",\r\n        \"next\": \"4\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"1\",\r\n        \"category\": \"http\",\r\n        \"parameters\": {\r\n          \"input\": {},\r\n          \"request\": {\r\n            \"url\": {\r\n              \"$mustache\": \"https://api.{{{environment.BASE_URL}}}/user/profile\"\r\n            },\r\n            \"verb\": \"GET\",\r\n            \"headers\": {\r\n              \"Authorization\": {\r\n                \"$mustache\": \"UserLogin apikey=\\\"{{{actor_data.lendico_token}}}\\\"\"\r\n              }\r\n            }\r\n          },\r\n          \"valid_response_codes\": [\r\n            200,\r\n            204\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"4\",\r\n        \"name\": \"Set to bag node\",\r\n        \"next\": \"5\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"1\",\r\n        \"category\": \"setToBag\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"profile\": {\r\n              \"$ref\": \"result.data\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"5\",\r\n        \"name\": \"Http node\",\r\n        \"next\": \"6\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"1\",\r\n        \"category\": \"http\",\r\n        \"parameters\": {\r\n          \"input\": {},\r\n          \"request\": {\r\n            \"url\": {\r\n              \"$mustache\": \"https://lists.{{{environment.BASE_URL}}}/api/states?order_by=rank\"\r\n            },\r\n            \"verb\": \"GET\"\r\n          },\r\n          \"valid_response_codes\": [\r\n            200,\r\n            204\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"6\",\r\n        \"name\": \"Set to bag node\",\r\n        \"next\": \"7\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"1\",\r\n        \"category\": \"setToBag\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"states\": {\r\n              \"$ref\": \"result.data.states\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"7\",\r\n        \"name\": \"User task node\",\r\n        \"next\": \"8\",\r\n        \"type\": \"UserTask\",\r\n        \"lane_id\": \"1\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"back\": \"voltar\",\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            },\r\n            \"step\": 3,\r\n            \"states\": {\r\n              \"$ref\": \"bag.states\"\r\n            },\r\n            \"proceed\": \"prosseguir\",\r\n            \"profile\": {\r\n              \"$ref\": \"bag.profile\"\r\n            },\r\n            \"city_url\": {\r\n              \"$mustache\": \"https://lists.{{{environment.BASE_URL}}}/api/states/:stateId/cities?order_by=rank&limit=1000\"\r\n            },\r\n            \"current_user\": {\r\n              \"$ref\": \"bag.creatorId\"\r\n            },\r\n            \"best_proposal_url\": {\r\n              \"$mustache\": \"https://api.{{{environment.BASE_URL}}}/approval/best_proposal\"\r\n            },\r\n            \"authorization_header\": {\r\n              \"$mustache\": \"UserLogin apikey=\\\"{{{actor_data.lendico_token}}}\\\"\"\r\n            }\r\n          },\r\n          \"action\": \"ADDRESS_INFO\",\r\n          \"activity_manager\": \"commit\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"8\",\r\n        \"name\": \"Flow node\",\r\n        \"next\": {\r\n          \"voltar\": \"20\",\r\n          \"default\": \"7\",\r\n          \"prosseguir\": \"10\"\r\n        },\r\n        \"type\": \"Flow\",\r\n        \"lane_id\": \"1\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"decision\": {\r\n              \"$ref\": \"result.activities[0].data.action\"\r\n            }\r\n          }\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"10\",\r\n        \"name\": \"Http node\",\r\n        \"next\": \"11\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"1\",\r\n        \"category\": \"http\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"$ref\": \"result.activities[0].data.data\"\r\n          },\r\n          \"request\": {\r\n            \"url\": {\r\n              \"$mustache\": \"https://api.{{{environment.BASE_URL}}}/user/profile\"\r\n            },\r\n            \"verb\": \"POST\",\r\n            \"headers\": {\r\n              \"Authorization\": {\r\n                \"$mustache\": \"UserLogin apikey=\\\"{{{actor_data.lendico_token}}}\\\"\"\r\n              }\r\n            }\r\n          },\r\n          \"valid_response_codes\": [\r\n            200,\r\n            204\r\n          ]\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"11\",\r\n        \"name\": \"Start process node\",\r\n        \"next\": \"99\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"1\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            }\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"ATV_MOBILE_CONFIRMATION\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"99\",\r\n        \"name\": \"Finish node\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"1\"\r\n      },\r\n      {\r\n        \"id\": \"20\",\r\n        \"name\": \"Start process node\",\r\n        \"next\": \"199\",\r\n        \"type\": \"SystemTask\",\r\n        \"lane_id\": \"1\",\r\n        \"category\": \"startProcess\",\r\n        \"parameters\": {\r\n          \"input\": {\r\n            \"cpf\": {\r\n              \"$ref\": \"bag.cpf\"\r\n            },\r\n            \"name\": {\r\n              \"$ref\": \"bag.name\"\r\n            }\r\n          },\r\n          \"actor_data\": {\r\n            \"$ref\": \"actor_data\"\r\n          },\r\n          \"workflow_name\": \"ATV_IDENTIFICATION_INFOS\"\r\n        }\r\n      },\r\n      {\r\n        \"id\": \"199\",\r\n        \"name\": \"Finish node\",\r\n        \"next\": null,\r\n        \"type\": \"Finish\",\r\n        \"lane_id\": \"1\"\r\n      }\r\n    ],\r\n    \"prepare\": [],\r\n    \"environment\": {\r\n      \"ACQ_URL\": \"ACQ_URL\",\r\n      \"ATV_URL\": \"ATV_URL\",\r\n      \"RET_URL\": \"RET_URL\",\r\n      \"BASE_URL\": \"BASE_URL\",\r\n      \"PARTNERS_URL\": \"PARTNERS_URL\"\r\n    },\r\n    \"requirements\": [\r\n      \"core\"\r\n    ]\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/workflows/diagram",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflows",
								"diagram"
							]
						}
					},
					"response": []
				}
			],
			"description": "Routes for managing workflows.\nCreate/Update, List/Read, Delete blueprints"
		},
		{
			"name": "Processes",
			"item": [
				{
					"name": "Create Process by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"pm.environment.set(\"process_id\",response.process_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/workflows/:workflow_id/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflows",
								":workflow_id",
								"create"
							],
							"variable": [
								{
									"key": "workflow_id",
									"value": "{{workflow_id}}",
									"type": "string"
								}
							]
						},
						"description": "This endpoint creates a process from a workflow.\n\nThe process can only be created if the user is allowed to access the startNode.\n\nAfter creation the process will be at *unstarted* status.\n\nThe startNode input schema is not evaluated during process creation."
					},
					"response": []
				},
				{
					"name": "Create Process by Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"pm.environment.set(\"process_id\",response.process_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/workflows/name/:workflow_name/create",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflows",
								"name",
								":workflow_name",
								"create"
							],
							"variable": [
								{
									"key": "workflow_name",
									"value": "{{workflow_name}}",
									"type": "string"
								}
							]
						},
						"description": "This endpoint works about the same way as the create process by id.\n\nIt takes the latest version of the workflow with the name provided."
					},
					"response": []
				},
				{
					"name": "Run Process",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/processes/:process_id/run",
							"host": [
								"{{host}}"
							],
							"path": [
								"processes",
								":process_id",
								"run"
							],
							"variable": [
								{
									"key": "process_id",
									"value": "{{process_id}}",
									"type": "string"
								}
							]
						},
						"description": "This endpoint is used to run a process currently at *unstarted*, *waiting* or *pending* status. \n\nIf used after process creation, that is when the startNode inputSchema is evaluated."
					},
					"response": []
				},
				{
					"name": "Start Process by Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"pm.environment.set(\"process_id\",response.process_id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"minime\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/workflows/name/:workflow_name/start",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflows",
								"name",
								":workflow_name",
								"start"
							],
							"variable": [
								{
									"key": "workflow_name",
									"value": "{{workflow_name}}",
									"type": "string"
								}
							]
						},
						"description": "This endpoint creates and run a process from the workflow name. It takes the latest blueprint version registered.\n\nThis endpoints works exactly as the _CREATE PROCESS_ and _RUN PROCESS_. The start node input schema evaluation is done after the process creation.\n\nThe started process will remain with two different start node states (*unstarted* and  *running*)."
					},
					"response": []
				},
				{
					"name": "List Processes",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/processes",
							"host": [
								"{{host}}"
							],
							"path": [
								"processes"
							],
							"query": [
								{
									"key": "filter",
									"value": "66da0cb0-e937-11e9-8ce0-fb7b0e91da24",
									"disabled": true
								}
							]
						},
						"description": "This workflow list _ALL_ processes created."
					},
					"response": [
						{
							"name": "200",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host}}/processes",
									"host": [
										"{{host}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "filter",
											"value": "66da0cb0-e937-11e9-8ce0-fb7b0e91da24",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Server",
									"value": "nginx/1.19.1"
								},
								{
									"key": "Date",
									"value": "Sun, 18 Oct 2020 13:45:08 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"uuid\",\n        \"created_at\": \"date-time\",\n        \"workflow_id\": \"uuid\",\n        \"current_state_id\": \"uuid\",\n        \"current_status\": \"string\"\n    }\n]"
						}
					]
				},
				{
					"name": "List Processes by Workflow ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/workflows/:id/processes",
							"host": [
								"{{host}}"
							],
							"path": [
								"workflows",
								":id",
								"processes"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{workflow_id}}"
								}
							]
						},
						"description": "This endpoint lists all processes created for a specific workflow_id."
					},
					"response": []
				},
				{
					"name": "Process History",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/processes/:process_id/history",
							"host": [
								"{{host}}"
							],
							"path": [
								"processes",
								":process_id",
								"history"
							],
							"variable": [
								{
									"key": "process_id",
									"value": "{{process_id}}",
									"type": "string"
								}
							]
						},
						"description": "This endpoints lists all states from a process ordered by descending step number."
					},
					"response": []
				},
				{
					"name": "Process Current State",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/processes/:process_id",
							"host": [
								"{{host}}"
							],
							"path": [
								"processes",
								":process_id"
							],
							"variable": [
								{
									"key": "process_id",
									"value": "{{process_id}}",
									"type": "string"
								}
							]
						},
						"description": "This endpoint returns the current state of a process."
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "ActivityManager",
			"item": [
				{
					"name": "Save Activity",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"input\": {\n\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/processes/:process_id/commit",
							"host": [
								"{{host}}"
							],
							"path": [
								"processes",
								":process_id",
								"commit"
							],
							"variable": [
								{
									"key": "process_id",
									"value": "{{process_id}}",
									"type": "string"
								}
							]
						},
						"description": "This endpoint saves the payload of the current activity of a process.\n\nThis endpoint is not suited for blueprints that uses notify activity_managers. \n\n**Important**: This endpoint dos not affect the process current status."
					},
					"response": []
				},
				{
					"name": "Push Activity",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/processes/:process_id/push",
							"host": [
								"{{host}}"
							],
							"path": [
								"processes",
								":process_id",
								"push"
							],
							"variable": [
								{
									"key": "process_id",
									"value": "{{process_id}}",
									"type": "string"
								}
							]
						},
						"description": "This endpoint pushes the content from an activity to the process. \n\nBecause it uses the process id, this endpoint is not suited for blueprints that uses notify activity managers.\n\nThe endpoint pushes all activities previously saved at the current activity manager.\n\n**Important**: the endpoint does not save any payload. Save the content before pushing it to the process.\n\nAfter pushing, the process leaves the *waiting* status and goes to *running* status"
					},
					"response": []
				},
				{
					"name": "Get Current Activity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json();\r",
									"\r",
									"pm.environment.set(\"activity_manager_id\",response.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/processes/:process_id/activity",
							"host": [
								"{{host}}"
							],
							"path": [
								"processes",
								":process_id",
								"activity"
							],
							"variable": [
								{
									"key": "process_id",
									"value": "{{process_id}}",
									"type": "string"
								}
							]
						},
						"description": "This endpoint returns all allowed started activities for the provided process id.\n\nIt can return more than one activity if the process uses notify activities.\n\nThe **id** returned represents the activity manager id.\n\n**Reminder**: If the user provided cannot access any activity, the endpoint will return a 404 response code."
					},
					"response": []
				},
				{
					"name": "Submit Activity",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/activity_manager/:activity_manager_id/submit",
							"host": [
								"{{host}}"
							],
							"path": [
								"activity_manager",
								":activity_manager_id",
								"submit"
							],
							"variable": [
								{
									"key": "activity_manager_id",
									"value": "{{activity_manager_id}}",
									"type": "string"
								}
							]
						},
						"description": "This endpoint joins the _Commit_ and _Push_ of an activity.\n\n**Important**: It uses de *activity_manager_id*\n\nInstead of using the process id, it uses the activity manager id so if can be used on any kind of activity.\n\n"
					},
					"response": []
				},
				{
					"name": "List Done Activities for Actor",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/processes/done",
							"host": [
								"{{host}}"
							],
							"path": [
								"processes",
								"done"
							]
						},
						"description": "This endpoints returns all allowed and completed activities for the user provided."
					},
					"response": []
				},
				{
					"name": "List Available Activities from Actor",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/processes/available",
							"host": [
								"{{host}}"
							],
							"path": [
								"processes",
								"available"
							],
							"query": [
								{
									"key": "workflow_id",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "This endpoints returns all allowed and completed activities for the user provided.\n\nThis endpoint allows filtering by workflow id (send by query params)"
					},
					"response": []
				},
				{
					"name": "Read Activity",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/processes/activityManager/:activity_manager_id",
							"host": [
								"{{host}}"
							],
							"path": [
								"processes",
								"activityManager",
								":activity_manager_id"
							],
							"variable": [
								{
									"key": "activity_manager_id",
									"value": "{{activity_manager_id}}",
									"type": "string"
								}
							]
						},
						"description": "This endpoint returns the data from a specific activity."
					},
					"response": []
				},
				{
					"name": "List Available Activities from Actor (reduced)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/activities/available",
							"host": [
								"{{host}}"
							],
							"path": [
								"activities",
								"available"
							],
							"query": [
								{
									"key": "workflow_id",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get a Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"pm.environment.set(\"token\",response.jwtToken);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "x-secret",
						"value": "1234",
						"type": "text",
						"disabled": true
					},
					{
						"key": "x-duration",
						"value": "6000000",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{host}}/token",
					"host": [
						"{{host}}"
					],
					"path": [
						"token"
					]
				},
				"description": "This endpoit generates a jwt that can be used to access the FlowBuild API.\n\nData\n\n| Field | Location | Comments | \n| --- | --- | --- |\n| x-secret | header | default = 1234 |\n| x-duration | header | in minutes, default = 60 |\n| actor_id | body | required |\n| claims | body | required |"
			},
			"response": [
				{
					"name": "200",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/anonymousToken",
							"host": [
								"{{host}}"
							],
							"path": [
								"anonymousToken"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx/1.19.1"
						},
						{
							"key": "Date",
							"value": "Sun, 18 Oct 2020 12:32:19 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						}
					],
					"cookie": [],
					"body": "{\n    \"jwtToken\": \"jwt formatted token\",\n    \"payload\": {\n        \"auth_time\": 1603024338,\n        \"claims\": \"[\\\"string\\\",\\\"string\\\"]\",\n        \"actor_id\": \"string\",\n        \"exp\": 1603027938,\n        \"iat\": 1603024338\n    }\n}"
				}
			]
		},
		{
			"name": "Healthcheck",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/",
					"host": [
						"{{host}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "workflow_id",
			"value": ""
		},
		{
			"key": "sf_processId",
			"value": ""
		}
	]
}